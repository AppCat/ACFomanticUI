@page "/input"

<FTypeInput ValueType="typeof(int?)" Value="@Int" ValueChanged="@(input => Int = (int?)input)" Transparent Icon>
    <ChildContent>
        <FIcon Set="x" />
    </ChildContent>
</FTypeInput>

<FInput InputType="FInputType.Number" TValue="int?" Value="@Int" ValueChanged="@(input => Int = input)" QuickResponse OnValueChange="@(value => Console.WriteLine(value))"/>

<FInput InputType="FInputType.Number" @bind-Value="@Int" />

<FDivider />

<FTypeInput ValueType="typeof(DateTime?)" Value="@DateTime" ValueChanged="@(input => DateTime = (DateTime?)input)" Transparent Icon Format="yyyy-MM-ddThh:mm">
    <ChildContent>
        <FIcon Set="x" />
    </ChildContent>
</FTypeInput>

<FInput InputType="FInputType.Datetime" TValue="DateTime?" Value="@DateTime" ValueChanged="@(input => DateTime = input)" Format="yyyy-MM-ddThh:mm" />

<FInput InputType="FInputType.Datetime" @bind-Value="@DateTime" Format="yyyy-MM-ddThh:mm" />

<FDivider />

<FTypeInput ValueType="typeof(bool)" Value="@Bool" ValueChanged="@(input => Bool = (bool)input)" Transparent Icon>
    <ChildContent>
        <FIcon Set="x" />
    </ChildContent>
</FTypeInput>

<FCheckbox Checked="@Bool" CheckedChanged="@(input => Bool = (bool)input)" />

<FInput TValue="string" />

<FSearch OnResponse="HandleSearchResponseAsync">

</FSearch>

<FList Horizontal>
    <FItem><FInput TValue="string" /></FItem>
    <FItem><FInput TValue="string" /></FItem>
    <FItem><FInput TValue="string" /></FItem>
</FList>

<FDivider />

@{
    var attributes = new Dictionary<String, Object>
    {
        { "style", "display: none" },
        { "id", "fileInput" },
        { "accept", ".csv" }
    };
}
<InputFile AdditionalAttributes="attributes" />
<FInput TValue="string" Style="display: none" ReadOnly Fluid Context="_" />
<FInput TValue="string" LabeledRight ReadOnly Placeholder=".csv" Context="_">
    <FLabel Link OnClick="@(async () => await JQueryHelp.ClickById("fileInput"))">
        <FIcon Set="file" />
        点击上传
    </FLabel>
</FInput>

@*<FCheckbox @bind-Checked="@Bool" />*@

@code{

    protected int? Int { get; set; }
    protected DateTime? DateTime { get; set; }
    protected bool Bool { get; set; }


    /// <summary>
    /// 处理搜索响应
    /// </summary>
    /// <param name="value"></param>
    /// <returns></returns>
    private async Task<IFResult[]> HandleSearchResponseAsync(string value)
    {
        return Enumerable.Range(0, 20).Select(i => FResult.Create(i.ToString(), Guid.NewGuid().ToString("N"))).ToArray();
    }
}